
//main
dependencies {
    implementation project(':MainLibProj')
    implementation project(':unity-android-resources')
    implementation project(':unity-mtp')
    //implementation project(':unity-bugly')
    //implementation project(':unity-ntp')

    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs', excludes: [
            'unity-classes.jar'
    ])
    implementation(name: 'unity-classes', ext: 'jar')
}
//noImplementation
dependencies {
    noImplementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs/no')
}
//biliImplementation
dependencies {
    biliImplementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs/bili')
}
//shareJoyImplementation
dependencies {
    shareJoyImplementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs/shareJoy')
}
//uoImplementation
dependencies {
    uoImplementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs/uo')
}

def getConfig(flag = "Release") {
    def temp = System.getenv("server");
    if (temp == "") temp = null;

    def servers = (temp ?: flag).split(',')
    println "---------select servers---------- : " + servers

    def jsonFile = file(project.getProjectDir().path + "/../../../Config.json").getText()
    def json = new groovy.json.JsonSlurper().parseText(jsonFile)
    json = json.findAll { it.Flag in servers }

    //追加信息
    json.forEach {
        it.RandomCode = System.getenv("productName".toLowerCase())
        it.BuildTime = System.getenv("time".toLowerCase())
        it.ProductName = System.getenv("productName".toLowerCase())
        it.ApplicationId = System.getenv("applicationId".toLowerCase())
        it.VersionCode = System.getenv("versionCode".toLowerCase())
        it.VersionName = System.getenv("versionName".toLowerCase())
        it.GrayPackage = System.getenv("grayPackage".toLowerCase())
    }

    def res = groovy.json.JsonOutput.toJson(json)
    res = java.util.Base64.getEncoder().encodeToString(res.getBytes())

    println flag
    println res

    def content = "package com.unity3d.player;\npublic final class Config {\n\tpublic static final String  gameConfig = \"${res}\";\n}"
    def javaFile = file("src/main/java/com/unity3d/player/Config.java")
    if (file(javaFile.parent).exists().equals(false)) file(javaFile.parent).mkdirs()
    javaFile.write(content)

    return res
}

def preNoBuild() {
    getConfig("Release")
    println("=================preNoBuild doFirst=================")
}

def preBiliBuild() {
    getConfig("Release")
    println("=================preBiliBuild doFirst=================")
}

def preShareJoyBuild() {
    getConfig("Release")
    println("=================preShareJoyBuild doFirst=================")
}

def preUoBuild() {
    getConfig("Release-UO")
    println("=================preUoBuild doFirst=================")
}

def preKomoeBuild() {
    getConfig("Release")
    println("=================preKomoeBuild doFirst=================")
}

def preKoreaBuild() {
    getConfig("Release")
    println("=================preKoreaBuild doFirst=================")
}

afterEvaluate {
    preNoDebugBuild.doFirst { preNoBuild() }
    preNoReleaseBuild.doFirst { preNoBuild() }
    preBiliDebugBuild.doFirst { preBiliBuild() }
    preBiliReleaseBuild.doFirst { preBiliBuild() }
    preShareJoyDebugBuild.doFirst { preShareJoyBuild() }
    preShareJoyReleaseBuild.doFirst { preShareJoyBuild() }
    preUoDebugBuild.doFirst { preUoBuild() }
    preUoReleaseBuild.doFirst { preUoBuild() }
    preKomoeDebugBuild.doFirst { preKomoeBuild() }
    preKomoeReleaseBuild.doFirst { preKomoeBuild() }
    preKoreaDebugBuild.doFirst { preKoreaBuild() }
    preKoreaReleaseBuild.doFirst { preKoreaBuild() }
}